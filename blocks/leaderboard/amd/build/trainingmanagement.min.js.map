{"version":3,"file":"trainingmanagement.min.js","sources":["../src/trainingmanagement.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_courses/trainingmanagement\n * @class      trainingmanagement\n * @package    local_courses\n * @copyright  2018 Sreenivas\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later \n */\ndefine(['local_assignroles/jquery.dataTables', 'jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui', 'core/templates'],\n    function (dataTable, $, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y, Templates) {\n\n        /**\n        * Constructor\n        *\n        * @param {object} args\n        *\n        * Each call to init gets it's own instance of this class.\n        */\n        var trainingmanagement = function (args) {\n            this.contextid = args.contextid ? args.contextid : 1;\n            this.args = args;\n            this.init(args);\n            this.tunit = args.tunit;\n        };\n\n        /**\n        * @var {Modal} modal\n        * @private\n        */\n        trainingmanagement.prototype.modal = null;\n\n        /**\n        * @var {int} contextid\n        * @private\n        */\n        trainingmanagement.prototype.contextid = -1;\n\n        /**\n        * Initialise the class.\n        *\n        * @param {String} selector used to find triggers for the new group modal.\n        * @private\n        * @return {Promise}\n        */\n        trainingmanagement.prototype.init = function (args) {\n            // Fetch the title string.\n            var self = this;\n\n            var head = {\n                key: 'courses', component: 'block_leaderboard',\n            };\n            customstrings = Str.get_strings([head,\n                {\n                    key: 'squads', component: 'block_leaderboard'\n                },\n                {\n                    key: 'users', component: 'block_leaderboard'\n                },\n                {\n                    key: 'instructors', component: 'block_leaderboard'\n                },\n                {\n                    key: 'close',\n                    component: 'block_leaderboard'\n                },\n                {\n                    key: 'reviews',\n                    component: 'block_leaderboard'\n                },\n                {\n                    key: 'gradeshistory',\n                    component: 'local_instructor_rating'\n                },\n                ]);\n\n\n\n            return customstrings.then(function (strings) {\n                // Create the modal.\n                var title = '';\n                if (this.args.callback == 'coursespopup') {\n                    title = strings[0];\n                } else if (this.args.callback == 'squads') {\n                    title = strings[1];\n                } else if (this.args.callback == 'users') {\n                    title = strings[2];\n                } else if (this.args.callback == 'instructors') {\n                    title = strings[3];\n                }else if (this.args.callback == 'reviews') {\n                    title = strings[5];\n                }else if (this.args.callback == 'gradeshistory') {\n                    title = strings[6];\n                }\n                return ModalFactory.create({\n                    type: ModalFactory.types.CANCEL,\n                    title: title,\n                    body: this.getBody(),\n                });\n            }.bind(this)).then(function (modal) {\n                // Keep a reference to the modal.\n                this.modal = modal;\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n\n                // We want to reset the form every time it is opened.\n                self.modal.getRoot().on(ModalEvents.hidden, function () {\n                    self.modal.setBody('');\n                    self.modal.hide();\n                    self.modal.destroy();\n                }.bind(this));\n\n                // We want to reset the form every time it is opened.\n                self.modal.getRoot().on(ModalEvents.cancel, function () {\n                    self.modal.setBody('');\n                    self.modal.hide();\n                    self.modal.destroy();\n                }.bind(this));\n                this.modal.getRoot().on(ModalEvents.bodyRendered, function () {\n                    this.dataTableshow(args.tunit);\n                }.bind(this));\n                self.modal.show();\n                return this.modal;\n            }.bind(this));\n        };\n        trainingmanagement.prototype.dataTableshow = function (tunit) {\n            // console.log(tunit);\n            $.fn.dataTable.ext.errMode = 'none';\n            $('.managementpopuptable_details').dataTable({\n                'bPaginate': true,\n                'bFilter': true,\n                'bLengthChange': true,\n                'lengthMenu': [\n                    [5, 10, 25, 50, 100, -1],\n                    [5, 10, 25, 50, 100, 'All']\n                ],\n                'language': {\n                    'emptyTable': 'No Records Found',\n                    'paginate': {\n                        'previous': '<',\n                        'next': '>'\n                    }\n                },\n\n                'bProcessing': true,\n            });\n        };\n        /**\n        * @method getBody\n        * @private\n        * @return {Promise}\n        */\n        trainingmanagement.prototype.getBody = function (args) {\n            // Get the content of the modal.\n            console.log(this.args);\n            return Fragment.loadFragment(this.args.component, this.args.callback, 1, this.args);\n        };\n        /**\n        * @method getFooter\n        * @private\n        * @return {Promise}\n        */\n        trainingmanagement.prototype.getFooter = function (customstrings) {\n            var footer = '';\n            footer = '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">' + customstrings[0] + '</button>';\n            return footer;\n            // }.bind(this));\n        };\n        /**\n        * @method getFooter\n        * @private\n        * @return {Promise}\n        */\n        trainingmanagement.prototype.getcontentFooter = function () {\n            return Str.get_strings([{\n                key: 'cancel'\n            }]).then(function (s) {\n                $footer = '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">' + s[1] + '</button>';\n                return $footer;\n            }.bind(this));\n        };\n\n        return /** @alias module:core_group/trainingmanagement */ {\n            // Public variables and functions.\n            /**\n             * Attach event listeners to initialise this module.\n             *\n             * @method init\n             * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n             * @param {int} contextid The contextid for the course.\n             * @return {Promise}\n             */\n            load: function () { \n                $('#leaderboard').dataTable({\n                    'bPaginate': true,\n                    'bFilter': true,\n                    'bLengthChange': false,\n                    \"pageLength\" : 5,\n                    // 'lengthMenu': [\n                    //     [5, 10, 25, 50, 100, -1],\n                    //     [5, 10, 25, 50, 100, 'All']\n                    // ],\n                    'language': {\n                        'emptyTable': 'No Records Found',\n                        'paginate': {\n                            'previous': '<',\n                            'next': '>'\n                        }\n                    },\n\n                    'bProcessing': true,\n                    'ordering': false,\n                });\n                $.fn.dataTable.ext.errMode = 'none';\n            }\n        };\n    });"],"names":["define","dataTable","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","Templates","trainingmanagement","args","contextid","init","tunit","prototype","modal","self","this","customstrings","get_strings","key","component","then","strings","title","callback","create","type","types","CANCEL","body","getBody","bind","setLarge","getRoot","on","hidden","setBody","hide","destroy","cancel","bodyRendered","dataTableshow","show","fn","ext","errMode","console","log","loadFragment","getFooter","getcontentFooter","s","$footer","load"],"mappings":"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"}