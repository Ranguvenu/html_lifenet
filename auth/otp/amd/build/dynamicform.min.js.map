{"version":3,"file":"dynamicform.min.js","sources":["../src/dynamicform.js"],"sourcesContent":["import ModalForm from 'core_form/modalform';\nimport Pending from 'core/pending';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Notification from 'core/notification';\nimport Ajax from 'core/ajax';\nimport {get_strings as getStrings} from 'core/str';\n\n/**\n * @class local_trainingprogram/dynamicform\n */\nexport default class OTPynamicForm extends ModalForm {\n/**\n     * Various events that can be observed.\n     *\n     * @type {Object}\n     */\n    events = {\n        // Form was successfully submitted - the response is passed to the event listener.\n        // Cancellable (but it's hardly ever needed to cancel this event).\n        FORM_SUBMITTED: 'core_form_modalform_formsubmitted',\n        // Cancel button was pressed.\n        // Cancellable (but it's hardly ever needed to cancel this event).\n        FORM_CANCELLED: 'core_form_modalform_formcancelled',\n        // User attempted to submit the form but there was client-side validation error.\n        CLIENT_VALIDATION_ERROR: 'core_form_modalform_clientvalidationerror',\n        // User attempted to submit the form but server returned validation error.\n        SERVER_VALIDATION_ERROR: 'core_form_modalform_validationerror',\n        // Error occurred while performing request to the server.\n        // Cancellable (by default calls Notification.exception).\n        ERROR: 'core_form_modalform_error',\n        // Right after user pressed no-submit button,\n        // listen to this event if you want to add JS validation or processing for no-submit button.\n        // Cancellable.\n        NOSUBMIT_BUTTON_PRESSED: 'core_form_modalform_nosubmitbutton',\n        // Right after user pressed submit button,\n        // listen to this event if you want to add additional JS validation or confirmation dialog.\n        // Cancellable.\n        SUBMIT_BUTTON_PRESSED: 'core_form_modalform_submitbutton',\n        // Right after user pressed cancel button,\n        // listen to this event if you want to add confirmation dialog.\n        // Cancellable.\n        CANCEL_BUTTON_PRESSED: 'core_form_modalform_cancelbutton',\n        // Modal was loaded and this.modal is available (but the form content may not be loaded yet).\n        LOADED: 'core_form_modalform_loaded',\n        CONTENT_LOADED: 'local_trainingprogram_dynamicform_content_loaded'\n    };\n/**\n     * Initialise the modal and shows it\n     *\n     * @return {Promise}\n     */\n    show() {\n        const pendingPromise = new Pending('core_form/modalform:init');\n        return ModalFactory.create(this.config.modalConfig)\n        .then((modal) => {\n            this.modal = modal;\n\n            // Retrieve the form and set the modal body. We can not set the body in the modalConfig,\n            // we need to make sure that the modal already exists when we render the form. Some form elements\n            // such as date_selector inspect the existing elements on the page to find the highest z-index.\n            const formParams = new URLSearchParams(Object.entries(this.config.args || {}));\n            //Modal View - Starts//\n            this.modal.setLarge();\n            this.modal.getRoot().addClass('openLMStransition');\n            this.modal.getRoot().on(ModalEvents.hidden, function() {\n            this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n            setTimeout(function(){\n                this.modal.destroy();\n            }, 1000);\n            this.modal.setBody('');\n            }.bind(this));\n            // this.modal.show();\n            this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n             this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                this.modal.setBody('');\n                this.modal.hide();\n                setTimeout(function(){\n                    this.modal.destroy();\n                }, 1000);\n            });\n            this.modal.getRoot().find('[data-action=\"hide\"]').on('click', function() {\n                this.modal.hide();\n                setTimeout(function(){\n                    this.modal.destroy();\n                }, 1000);\n                this.modal.destroy();\n            });\n            //Modal View - Ends//\n            const bodyContent = this.getBody(formParams.toString());\n            this.modal.setBodyContent(bodyContent);\n            this.modal.getRoot().on(ModalEvents.bodyRendered, (e) => {\n            this.trigger(this.events.CONTENT_LOADED);\n                if(typeof \"select[name='sectors[]']\" != 'undefined'){\n                    var sectors = $(\"select[name='sectors[]']\").val();\n                    if(typeof $('#el_segmentlist') != 'undefined'){\n                        $('select#el_segmentlist').data('sectorid',sectors);\n                    }\n                 \n                    if(typeof $('#el_jobfamily') != 'undefined'){\n                        $('#el_jobfamily').data('sectorid',sectors);\n                    }\n                }\n                $(\"select[name='sectors[]']\").on('change', function(e){\n                    \n                       var sectors = $(this).val();\n\n                       var segments = $(this).closest(\"form\").find(\"select[name='segments[]']\");\n                       segments.val('');\n                       segments.attr('data-sectorid',sectors);\n\n                       var targetgroup = $(this).closest(\"form\").find(\"select[name='targetgroup[]']\");\n\n                       targetgroup.val('');\n                       targetgroup.attr('data-sectorid',sectors);\n                });\n\n                if(typeof \"select[name='sectors']\" != 'undefined'){\n                    var sectors = $(\"select[name='sectors']\").val();\n                    if(typeof $('#el_segmentlist') != 'undefined'){\n                        $('select#el_segmentlist').attr('data-sectorid',sectors);\n                    }\n                 \n                    if(typeof $('#el_jobfamily') != 'undefined'){\n                        $('#el_jobfamily').attr('data-sectorid',sectors);\n                    }\n                }\n                $(\"select[name='sectors']\").on('change', function(e){\n                    \n                       var sectors = $(this).val();\n\n                       var segments = $(this).closest(\"form\").find(\"select[name='segments[]']\");\n                       var segment = $(this).closest(\"form\").find(\"select[name='segment']\");\n                       segments.val('');\n                       segments.attr('data-sectorid',sectors);\n\n                       segment.val('');\n                       segment.attr('data-sectorid',sectors);\n\n                       var targetgroup = $(this).closest(\"form\").find(\"select[name='targetgroup[]']\");\n\n                       targetgroup.val('');\n                       targetgroup.attr('data-sectorid',sectors);\n                });\n                // competencies by type - Starts\n\n                if(typeof \"select[name='ctype[]']\" != 'undefined'){\n                    var ctype = $(\"select[name='ctype[]']\").val();\n                    if(typeof $('#el_competencieslist') != 'undefined'){\n                        $('select#el_competencieslist').data('ctype',ctype);\n                    }\n                }\n\n                $(\"select[name='ctype[]']\").on('change', function(e){\n                       var ctype = $(this).val();\n                       var competenices = $(this).closest(\"form\").find(\"select[name='competencylevel[]']\");\n                       competenices.attr('data-ctype','[]');\n                       ctype=JSON.stringify(ctype);\n                       competenices.val('');\n                       competenices.attr('data-ctype',ctype);\n                });\n                // competencies by type - Ends\n\n                //Job family\n                if(typeof $('#el_segmentlist') != 'undefined'){\n                    if(typeof $('#el_jobfamily') != 'undefined'){\n                        var sectors = $('.el_sectorlist').val();\n                        $('select#el_jobfamily').attr('data-sectorid',sectors);\n                        var segments = $('#el_segmentlist').val();\n                        $('select#el_jobfamily').attr('data-segmentid',segments);\n                    }\n                }\n                $('#el_segmentlist').on('change', function(e){\n                       var segments = $('#el_segmentlist').val();\n                       $('select#el_jobfamily').val('');\n                       $('select#el_jobfamily').attr('data-segmentid',segments);\n                });\n\n                //job role\n                if(typeof $('#el_jobfamily') != 'undefined'){\n                    if(typeof $('#el_jobroles') != 'undefined'){\n                        var jobfamily = $('#el_jobfamily').val();\n                        $('select#el_jobroles').attr('data-jobfamilyid',jobfamily);\n                    }\n                }\n                $('#el_jobfamily').on('change', function(e){\n                       var jobfamily = $('#el_jobfamily').val();\n                       $('select#el_jobroles').val('');\n                       $('select#el_jobroles').attr('data-jobfamilyid',jobfamily);\n                });\n\n                $(\"select[name='startdate[day]']\").on('change', function(e){\n                    $('.entityhall .badge-info').html('');\n\n                    const requiredStrings = [\n                        {key: 'selecthall', component: 'local_trainingprogram'},\n                    ];\n\n                    getStrings(requiredStrings).then(([title]) => {\n                        $('.entityhall .badge-info').html(title);\n                    }).catch();\n\n                    $(\"select[name='halladdress']\").val(\"0\");\n                        var params = {};\n                        params.sessionkey = $(\"input[name='sesskey']\").val();\n                        params.type = 'tprogram';\n                        var promise = Ajax.call([{\n                            methodname: 'remove_reservations',\n                            args: params\n                        }]);\n                        promise[0].done(function(resp) {\n                            $(\".entityhalldetails\").html('');\n                            console.log('Successfully reservations removed');\n                        }).fail(function() {\n                             console.log('exception');\n                        });\n                });\n            });\n            bodyContent.catch(Notification.exception);\n\n            // After successfull submit, when we press \"Cancel\" or close the dialogue by clicking on X in the top right corner.\n            this.modal.getRoot().on(ModalEvents.hidden, () => {\n               this.notifyResetFormChanges();\n                this.modal.destroy();\n                // Focus on the element that actually launched the modal.\n                if (this.config.returnFocus) {\n                    this.config.returnFocus.focus();\n                }\n            });\n\n            // Add the class to the modal dialogue.\n            this.modal.getModal().addClass('modal-form-dialogue');\n\n            // We catch the press on submit buttons in the forms.\n            this.modal.getRoot().on('click', 'form input[type=submit][data-no-submit]',\n                (e) => {\n                    e.preventDefault();\n                    const event = this.trigger(this.events.NOSUBMIT_BUTTON_PRESSED, e.target);\n                    if (!event.defaultPrevented) {\n                        this.processNoSubmitButton(e.target);\n                    }\n                });\n\n            // We catch the form submit event and use it to submit the form with ajax.\n            this.modal.getRoot().on('submit', 'form', (e) => {\n                e.preventDefault();\n                const event = this.trigger(this.events.SUBMIT_BUTTON_PRESSED);\n                if (!event.defaultPrevented) {\n                    this.submitFormAjax();\n                }\n            });\n\n            // Change the text for the save button.\n            if (typeof this.config.saveButtonText !== 'undefined' &&\n                typeof this.modal.setSaveButtonText !== 'undefined') {\n                this.modal.setSaveButtonText(this.config.saveButtonText);\n            }\n            // Set classes for the save button.\n            if (typeof this.config.saveButtonClasses !== 'undefined') {\n                this.setSaveButtonClasses(this.config.saveButtonClasses);\n            }\n            // When Save button is pressed - submit the form.\n            this.modal.getRoot().on(ModalEvents.save, (e) => {\n                e.preventDefault();\n                this.modal.getRoot().find('form').submit();\n            });\n\n            // When Cancel button is pressed - allow to intercept.\n            this.modal.getRoot().on(ModalEvents.cancel, (e) => {\n                const event = this.trigger(this.events.CANCEL_BUTTON_PRESSED);\n                if (event.defaultPrevented) {\n                    e.preventDefault();\n                }\n            });\n            this.futureListeners.forEach(args => this.modal.getRoot()[0].addEventListener(...args));\n            this.futureListeners = [];\n            this.trigger(this.events.LOADED, null, false);\n            return this.modal.show();\n        })\n        .then(pendingPromise.resolve);\n    }\n\n\n}\n"],"names":["OTPynamicForm","ModalForm","FORM_SUBMITTED","FORM_CANCELLED","CLIENT_VALIDATION_ERROR","SERVER_VALIDATION_ERROR","ERROR","NOSUBMIT_BUTTON_PRESSED","SUBMIT_BUTTON_PRESSED","CANCEL_BUTTON_PRESSED","LOADED","CONTENT_LOADED","show","pendingPromise","Pending","ModalFactory","create","this","config","modalConfig","then","modal","formParams","URLSearchParams","Object","entries","args","setLarge","getRoot","addClass","on","ModalEvents","hidden","animate","setTimeout","destroy","setBody","bind","getFooter","find","hide","bodyContent","getBody","toString","setBodyContent","bodyRendered","e","trigger","events","sectors","$","val","data","segments","closest","attr","targetgroup","segment","ctype","competenices","JSON","stringify","jobfamily","html","key","component","_ref","title","catch","params","sessionkey","type","Ajax","call","methodname","done","resp","console","log","fail","Notification","exception","notifyResetFormChanges","returnFocus","focus","getModal","preventDefault","target","defaultPrevented","processNoSubmitButton","submitFormAjax","saveButtonText","setSaveButtonText","saveButtonClasses","setSaveButtonClasses","save","submit","cancel","futureListeners","forEach","addEventListener","resolve"],"mappings":"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"}