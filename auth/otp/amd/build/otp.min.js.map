{"version":3,"file":"otp.min.js","sources":["../src/otp.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript controller for the \"Actions\" panel at the bottom of the page.\n *\n * @module     auth_otp/otp\n * @copyright  2021 Brain station 23 <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.1\n */\ndefine(['jquery', 'core/ajax', 'core/notification'], function ($, Ajax, Notification) {\n\n    $(\"#sendotp\").click(function () {\n        var countrycode =$('.iti__selected-dial-code').html();\n        var fullphone =  countrycode + $('#applicationid').val();\n        $('input[name=\"full_number\"]').val(fullphone);\n        var phone = $('#applicationid').val();\n        // ;\n        if (phone) {\n            alert(fullphone);\n            var phoneno = /^\\+[1-9]{1}[0-9]{3,14}$/;\n            if (phoneno.test(fullphone)) {\n                let timerOn = true;\n                function timer(remaining) {\n                    var m = Math.floor(remaining / 60);\n                    var s = remaining % 60;\n                    m = m < 10 ? '0' + m : m;\n                    s = s < 10 ? '0' + s : s;\n                    document.getElementById('timer').innerHTML = m + ':' + s;\n                    remaining -= 1;\n                    if (remaining >= 0 && timerOn) {\n                        setTimeout(function () {\n                            timer(remaining);\n                        }, 1000);\n                        return;\n                    }\n                    if (!timerOn) {\n                        // Do validate stuff here\n                        return;\n                    }\n                    // Do timeout stuff here\n                    alert('Timeout for otp');\n                    $('#sendotp').removeAttr('disabled');\n                    document.getElementById('timer').innerHTML = 'Resend Code';\n                    $('#sendotp').removeClass('d-none');\n                }\n                // API Call\n                var wsfunction = 'auth_otp_send_sms';\n                var params = {\n                    'phone': phone,\n                    'countrycode' : countrycode\n                };\n\n                var request = {\n                    methodname: wsfunction,\n                    args: params\n                };\n\n                try {\n                    Ajax.call([request])[0].done(function (data) {\n                        if (data.success == 1) {\n                            $('#otp-field').removeClass('d-none');\n                            $('#sendotp').attr('disabled', 'disabled');\n                            $('#applicationid').attr('disabled', 'disabled');\n                            $('#applicationid').val(phone);\n                            $('#username').val(phone);\n                            timer(300);\n\n                            Notification.addNotification({\n                                message: data.message,\n                                type: 'success'\n                            });\n\n                        } else {\n                            Notification.addNotification({\n                                message: 'Something went wrong to send otp Please Try again !!',\n                                type: 'error'\n                            });\n                        }\n                    }).fail(Notification.exception);\n                } catch (e) {\n                    console.log(e);\n                }\n            } else {\n                Notification.addNotification({\n                    message: 'insert Valid Phone number !!',\n                    type: 'error'\n                });\n            }\n        } else {\n            Notification.addNotification({\n                message: 'phone number can\\'t be empty',\n                type: 'error'\n            });\n\n        }\n        return false;\n    });\n});"],"names":["define","$","Ajax","Notification","click","countrycode","html","fullphone","val","phone","alert","test","timerOn","timer","remaining","m","Math","floor","s","document","getElementById","innerHTML","setTimeout","removeAttr","removeClass","request","methodname","args","call","done","data","success","attr","addNotification","message","type","fail","exception","e","console","log"],"mappings":";;;;;;;;AAuBAA,sBAAO,CAAC,SAAU,YAAa,sBAAsB,SAAUC,EAAGC,KAAMC,cAEpEF,EAAE,YAAYG,OAAM,eACZC,YAAaJ,EAAE,4BAA4BK,OAC3CC,UAAaF,YAAcJ,EAAE,kBAAkBO,MACnDP,EAAE,6BAA6BO,IAAID,eAC/BE,MAAQR,EAAE,kBAAkBO,SAE5BC,MAAO,CACPC,MAAMH,cACQ,0BACFI,KAAKJ,WAAY,KACrBK,SAAU,WACLC,MAAMC,eACPC,EAAIC,KAAKC,MAAMH,UAAY,IAC3BI,EAAIJ,UAAY,GACpBC,EAAIA,EAAI,GAAK,IAAMA,EAAIA,EACvBG,EAAIA,EAAI,GAAK,IAAMA,EAAIA,EACvBC,SAASC,eAAe,SAASC,UAAYN,EAAI,IAAMG,GACvDJ,WAAa,IACI,GAAKF,QAClBU,YAAW,WACPT,MAAMC,aACP,KAGFF,UAKLF,MAAM,mBACNT,EAAE,YAAYsB,WAAW,YACzBJ,SAASC,eAAe,SAASC,UAAY,cAC7CpB,EAAE,YAAYuB,YAAY,eAS1BC,QAAU,CACVC,WAPa,oBAQbC,KAPS,OACAlB,kBACOJ,kBAShBH,KAAK0B,KAAK,CAACH,UAAU,GAAGI,MAAK,SAAUC,MACf,GAAhBA,KAAKC,SACL9B,EAAE,cAAcuB,YAAY,UAC5BvB,EAAE,YAAY+B,KAAK,WAAY,YAC/B/B,EAAE,kBAAkB+B,KAAK,WAAY,YACrC/B,EAAE,kBAAkBO,IAAIC,OACxBR,EAAE,aAAaO,IAAIC,OACnBI,MAAM,KAENV,aAAa8B,gBAAgB,CACzBC,QAASJ,KAAKI,QACdC,KAAM,aAIVhC,aAAa8B,gBAAgB,CACzBC,QAAS,uDACTC,KAAM,aAGfC,KAAKjC,aAAakC,WACvB,MAAOC,GACLC,QAAQC,IAAIF,SAGhBnC,aAAa8B,gBAAgB,CACzBC,QAAS,+BACTC,KAAM,eAIdhC,aAAa8B,gBAAgB,CACzBC,QAAS,8BACTC,KAAM,iBAIP"}